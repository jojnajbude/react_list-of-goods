{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","good1","good2","ALPABET","localeCompare","LENGTH","length","reverse","App","state","NONE","sortAlphabetically","setState","sortByLength","reverseList","resetList","this","className","type","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAmBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAiBzB,OAfAG,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQL,GACN,KAAKJ,EAASU,QACZ,OAAOF,EAAMG,cAAcF,GAC7B,KAAKT,EAASY,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAC9B,QACE,OAAO,MAITR,GACFC,EAAaQ,UAGRR,G,SAhCJN,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAwCE,IAAMe,EAAb,4MACEC,MAAQ,CACNX,YAAY,EACZD,SAAUJ,EAASiB,MAHvB,EAMEC,mBAAqB,WACnB,EAAKC,SAAS,CAAEf,SAAUJ,EAASU,WAPvC,EAUEU,aAAe,WACb,EAAKD,SAAS,CAAEf,SAAUJ,EAASY,UAXvC,EAcES,YAAc,WACZ,EAAKF,UAAS,SAAAH,GAAK,MAAK,CAAEX,YAAaW,EAAMX,gBAfjD,EAkBEiB,UAAY,WACV,EAAKH,SAAS,CACZd,YAAY,EACZD,SAAU,KArBhB,4CAyBE,WACE,MAAiCmB,KAAKP,MAA9BX,EAAR,EAAQA,WAAYD,EAApB,EAAoBA,SAEpB,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CACE,WAAYtB,IAAaJ,EAASU,UAGtCiB,QAASJ,KAAKL,mBAThB,iCAcA,wBACEO,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CACE,WAAYtB,IAAaJ,EAASY,SAGtCe,QAASJ,KAAKH,aAThB,4BAcA,wBACEK,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CACE,YAAarB,IAGjBsB,QAASJ,KAAKF,YAThB,sBAcEhB,GAAcD,IAAaJ,EAASiB,OAElC,wBACEQ,KAAK,SACLD,UAAU,4BACVG,QAASJ,KAAKD,UAHhB,sBAUN,6BACGpB,EAAkBD,EAAiBsB,KAAKP,OACtCY,KAAI,SAAAC,GAAI,OACP,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,eAxFtC,GAAyBC,IAAMC,WCxD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.19882edf.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return good1.localeCompare(good2);\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortAlphabetically = () => {\n    this.setState({ sortType: SortType.ALPABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reverseList = () => {\n    this.setState(state => ({ isReversed: !state.isReversed }));\n  };\n\n  resetList = () => {\n    this.setState({\n      isReversed: false,\n      sortType: 0,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-info',\n              {\n                'is-light': sortType !== SortType.ALPABET,\n              },\n            )}\n            onClick={this.sortAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-success',\n              {\n                'is-light': sortType !== SortType.LENGTH,\n              },\n            )}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-warning',\n              {\n                'is-light': !isReversed,\n              },\n            )}\n            onClick={this.reverseList}\n          >\n            Reverse\n          </button>\n\n          {(isReversed || sortType !== SortType.NONE)\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={this.resetList}\n              >\n                Reset\n              </button>\n            )}\n        </div>\n\n        <ul>\n          {getReorderedGoods(goodsFromServer, this.state)\n            .map(good => (\n              <li data-cy=\"Good\" key={good}>{good}</li>\n            ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}